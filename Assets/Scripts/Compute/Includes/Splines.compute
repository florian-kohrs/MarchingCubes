#include "/Includes/Biom.compute"


int n;

int biomSize;


int2 GetStartXAndXProgress(int3 pos)
{
    return int2(pos.x / biomSize, pos.x % biomSize);
}

int2 GetStartYAndYProgress(int3 pos)
{
    return int2(pos.y / biomSize, pos.y % biomSize);
}

int2 GetStartZAndZProgress(int3 pos)
{
    return int2(pos.z / biomSize, pos.z % biomSize);
}

Biom GetInterpolatedBiomAt(int3 center, int3 pos)
{
    Biom previous[center.x];
    Biom current[n - 1];
    for (int i = n; i > 0; i--)
    {
        Biom interpolated[n-1];
        for (size_t x = 0; x < i; x++)
        {
            interpolated[x]
        }
    }
}

Biom GetBiomAt(int3 pos)
{

}

Biom InterpolateBiomInDirection(int3 pos, int3 dir)
{
    int xProg = pos.x % biomSize;
    int3 frontBotLeftCornerPos = (pos / biomSize) * biomSize;
    Biom frontbot = interpolate(GetBiomAt(frontBotLeftCornerPos), pos + int3(BiomSize,1,1)
}